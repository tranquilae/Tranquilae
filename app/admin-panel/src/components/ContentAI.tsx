import React, { useState } from 'react';
import { Brain, CheckCircle, AlertCircle, Clock, Upload, MessageSquare } from 'lucide-react';

const ContentAI: React.FC = () => {
  const [activeTab, setActiveTab] = useState('recommendations');

  const recommendations = [
    {
      id: 'rec_001',
      type: 'Meditation',
      content: '5-minute breathing exercise for stress relief',
      status: 'pending',
      aiConfidence: 0.92,
      submittedBy: 'AI System',
      createdAt: '2024-01-20T10:30:00Z'
    },
    {
      id: 'rec_002',
      type: 'Exercise',
      content: 'Morning yoga routine for beginners',
      status: 'approved',
      aiConfidence: 0.88,
      submittedBy: 'AI System',
      createdAt: '2024-01-19T15:45:00Z'
    },
    {
      id: 'rec_003',
      type: 'Nutrition',
      content: 'Healthy smoothie recipe with seasonal fruits',
      status: 'flagged',
      aiConfidence: 0.65,
      submittedBy: 'AI System',
      createdAt: '2024-01-18T09:15:00Z'
    }
  ];

  const notifications = [
    {
      id: 'notif_001',
      title: 'Welcome to Tranquilae!',
      content: 'Start your wellness journey today.',
      type: 'onboarding',
      status: 'active',
      targetUsers: 'new_users'
    },
    {
      id: 'notif_002',
      title: 'Weekly Check-in',
      content: 'How are you feeling this week?',
      type: 'engagement',
      status: 'active',
      targetUsers: 'all_users'
    }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'approved':
        return 'bg-green-200/50 dark:bg-green-900/30 text-green-700 dark:text-green-300';
      case 'pending':
        return 'bg-yellow-200/50 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300';
      case 'flagged':
        return 'bg-red-200/50 dark:bg-red-900/30 text-red-700 dark:text-red-300';
      default:
        return 'bg-gray-200/50 dark:bg-gray-900/30 text-gray-700 dark:text-gray-300';
    }
  };

  const getConfidenceColor = (confidence: number) => {
    if (confidence >= 0.8) return 'text-green-600 dark:text-green-400';
    if (confidence >= 0.6) return 'text-yellow-600 dark:text-yellow-400';
    return 'text-red-600 dark:text-red-400';
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div>
        <h1 className="text-3xl font-bold text-gray-800 dark:text-white mb-2">Content & AI Controls</h1>
        <p className="text-gray-600 dark:text-gray-400">Manage AI-generated content and user notifications.</p>
      </div>

      {/* Tabs */}
      <div className="backdrop-blur-xl bg-white/30 dark:bg-gray-900/30 rounded-2xl border border-white/20 dark:border-gray-700/30 p-2">
        <div className="flex space-x-1">
          {[
            { id: 'recommendations', label: 'AI Recommendations', icon: Brain },
            { id: 'notifications', label: 'Notifications', icon: MessageSquare },
            { id: 'content', label: 'Content Library', icon: Upload }
          ].map((tab) => {
            const Icon = tab.icon;
            return (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex-1 flex items-center justify-center space-x-2 px-4 py-3 rounded-xl transition-all duration-200 ${
                  activeTab === tab.id
                    ? 'bg-white/50 dark:bg-gray-800/50 text-gray-800 dark:text-white shadow-lg'
                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200'
                }`}
              >
                <Icon size={20} />
                <span className="font-medium">{tab.label}</span>
              </button>
            );
          })}
        </div>
      </div>

      {/* AI Recommendations Tab */}
      {activeTab === 'recommendations' && (
        <div className="space-y-6">
          <div className="backdrop-blur-xl bg-white/30 dark:bg-gray-900/30 rounded-2xl border border-white/20 dark:border-gray-700/30 overflow-hidden">
            <div className="p-6 border-b border-gray-200/50 dark:border-gray-700/50">
              <h2 className="text-xl font-semibold text-gray-800 dark:text-white">AI-Generated Recommendations</h2>
              <p className="text-gray-600 dark:text-gray-400 text-sm mt-1">Review and approve content generated by AI</p>
            </div>
            <div className="divide-y divide-gray-200/30 dark:divide-gray-700/30">
              {recommendations.map((rec) => (
                <div key={rec.id} className="p-6 hover:bg-white/20 dark:hover:bg-gray-800/20 transition-colors">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <span className="px-2 py-1 rounded-lg text-xs font-medium bg-blue-200/50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300">
                          {rec.type}
                        </span>
                        <span className={`px-2 py-1 rounded-lg text-xs font-medium ${getStatusColor(rec.status)}`}>
                          {rec.status}
                        </span>
                        <span className={`text-xs font-medium ${getConfidenceColor(rec.aiConfidence)}`}>
                          {Math.round(rec.aiConfidence * 100)}% confidence
                        </span>
                      </div>
                      <p className="text-gray-800 dark:text-white font-medium mb-2">{rec.content}</p>
                      <p className="text-sm text-gray-600 dark:text-gray-400">
                        Generated {new Date(rec.createdAt).toLocaleDateString()} by {rec.submittedBy}
                      </p>
                    </div>
                    {rec.status === 'pending' && (
                      <div className="flex space-x-2 ml-4">
                        <button className="px-3 py-1 rounded-lg bg-green-500/20 text-green-700 dark:text-green-300 hover:bg-green-500/30 transition-colors text-sm">
                          Approve
                        </button>
                        <button className="px-3 py-1 rounded-lg bg-red-500/20 text-red-700 dark:text-red-300 hover:bg-red-500/30 transition-colors text-sm">
                          Flag
                        </button>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Notifications Tab */}
      {activeTab === 'notifications' && (
        <div className="space-y-6">
          <div className="backdrop-blur-xl bg-white/30 dark:bg-gray-900/30 rounded-2xl border border-white/20 dark:border-gray-700/30 p-6">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-xl font-semibold text-gray-800 dark:text-white">User Notifications</h2>
              <button className="px-4 py-2 rounded-lg bg-blue-500 hover:bg-blue-600 text-white font-medium transition-colors">
                Create New
              </button>
            </div>
            <div className="space-y-4">
              {notifications.map((notif) => (
                <div key={notif.id} className="p-4 rounded-xl backdrop-blur-md bg-white/50 dark:bg-gray-800/50 border border-white/20 dark:border-gray-700/30">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <h3 className="font-semibold text-gray-800 dark:text-white">{notif.title}</h3>
                        <span className="px-2 py-1 rounded-lg text-xs font-medium bg-blue-200/50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300">
                          {notif.type}
                        </span>
                        <span className={`px-2 py-1 rounded-lg text-xs font-medium ${getStatusColor(notif.status)}`}>
                          {notif.status}
                        </span>
                      </div>
                      <p className="text-gray-600 dark:text-gray-400 mb-2">{notif.content}</p>
                      <p className="text-sm text-gray-500 dark:text-gray-500">Target: {notif.targetUsers.replace('_', ' ')}</p>
                    </div>
                    <div className="flex space-x-2 ml-4">
                      <button className="px-3 py-1 rounded-lg bg-blue-500/20 text-blue-700 dark:text-blue-300 hover:bg-blue-500/30 transition-colors text-sm">
                        Edit
                      </button>
                      <button className="px-3 py-1 rounded-lg bg-red-500/20 text-red-700 dark:text-red-300 hover:bg-red-500/30 transition-colors text-sm">
                        Disable
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Content Library Tab */}
      {activeTab === 'content' && (
        <div className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="backdrop-blur-xl bg-white/30 dark:bg-gray-900/30 rounded-2xl border border-white/20 dark:border-gray-700/30 p-6">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-4">Upload Content</h3>
              <div className="space-y-4">
                <div className="border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-8 text-center">
                  <Upload className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                  <p className="text-gray-600 dark:text-gray-400">Drop files here or click to upload</p>
                  <button className="mt-2 px-4 py-2 rounded-lg bg-blue-500 hover:bg-blue-600 text-white font-medium transition-colors">
                    Choose Files
                  </button>
                </div>
              </div>
            </div>

            <div className="backdrop-blur-xl bg-white/30 dark:bg-gray-900/30 rounded-2xl border border-white/20 dark:border-gray-700/30 p-6">
              <h3 className="text-lg font-semibold text-gray-800 dark:text-white mb-4">Content Stats</h3>
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-gray-600 dark:text-gray-400">Meditation Content</span>
                  <span className="font-semibold text-gray-800 dark:text-white">142 items</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600 dark:text-gray-400">Exercise Videos</span>
                  <span className="font-semibold text-gray-800 dark:text-white">89 items</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600 dark:text-gray-400">Nutrition Guides</span>
                  <span className="font-semibold text-gray-800 dark:text-white">56 items</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600 dark:text-gray-400">FAQ Articles</span>
                  <span className="font-semibold text-gray-800 dark:text-white">23 items</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ContentAI;