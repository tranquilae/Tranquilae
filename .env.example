# üåø Tranquilae - Environment Variables
# Copy this file to .env.local and fill in your actual values
#
# QUICK SETUP GUIDE:
# 1. Database: Get PostgreSQL URL from Neon (neon.tech)
# 2. Auth: Create Supabase project (supabase.com) 
# 3. Payments: Set up Stripe account (stripe.com)
# 4. Email: Get Resend API key (resend.com)
# 5. AI: Create OpenAI account (platform.openai.com)

# ==============================================
# üöÄ DEPLOYMENT & HOSTING
# ==============================================
NEXT_PUBLIC_APP_URL="http://localhost:3000"
# Production: "https://tranquilae.com"
NEXT_PUBLIC_SITE_URL="https://tranquilae.com"

# ==============================================
# üêò DATABASE - Required
# ==============================================
# PostgreSQL connection string from Neon (recommended)
# Sign up at: https://neon.tech/
# Create project ‚Üí Copy connection string
DATABASE_URL="postgresql://username:password@ep-name.region.neon.tech/dbname?sslmode=require"

# ==============================================
# üîê AUTHENTICATION - Required (Updated for 2024)
# ==============================================
# Supabase project credentials with new JWT system
# Sign up at: https://supabase.com/
# Create project ‚Üí Settings ‚Üí API ‚Üí API Keys

# Project URL (stays the same)
NEXT_PUBLIC_SUPABASE_URL="https://your-project.supabase.co"

# NEW: Use the "anon" key (public) - NOT the legacy key
# Settings ‚Üí API ‚Üí Project API keys ‚Üí "anon" "public"
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByb2plY3QtaWQiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTYzOTU0NDAwMCwiZXhwIjoyMDAwMDAwMDAwfQ..."

# NEW: Use "service_role" key for server operations
# Settings ‚Üí API ‚Üí Project API keys ‚Üí "service_role" "secret"
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByb2plY3QtaWQiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNjM5NTQ0MDAwLCJleHAiOjIwMDAwMDAwMDB9..."

# NEW: JWT Secret for verification (replaced old auth system)
# Settings ‚Üí API ‚Üí JWT Settings ‚Üí JWT Secret
# This is used for token verification and signing
SUPABASE_JWT_SECRET="your-super-secret-jwt-key-minimum-32-characters-long"

# ==============================================
# üí≥ PAYMENTS - Required for Pathfinder Plan
# ==============================================
# Stripe payment processing
# Sign up at: https://stripe.com/
# Dashboard ‚Üí Developers ‚Üí API keys
STRIPE_SECRET_KEY="sk_test_51..." 
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY="pk_test_51..."

# Webhook secret for payment events
# Dashboard ‚Üí Webhooks ‚Üí Add endpoint: https://your-domain.com/api/webhooks/stripe
STRIPE_WEBHOOK_SECRET="whsec_..."

# Product price IDs (create products first in Stripe)
# Dashboard ‚Üí Products ‚Üí Create: "Pathfinder Monthly" (¬£10) & "Pathfinder Yearly" (¬£100)
STRIPE_PRICE_ID_PATHFINDER_MONTHLY="price_..."
STRIPE_PRICE_ID_PATHFINDER_YEARLY="price_..."

# ==============================================
# üìß EMAIL SERVICE - Required
# ==============================================
# Resend for transactional emails
# Sign up at: https://resend.com/
# Domains ‚Üí Add & verify domain ‚Üí API keys
RESEND_API_KEY="re_..."
FROM_EMAIL="noreply@your-domain.com"
FROM_NAME="Tranquilae"

# ==============================================
# ü§ñ AI COACH - Required for AI features
# ==============================================
# OpenAI for personalized wellness coaching
# Sign up at: https://platform.openai.com/
# API keys ‚Üí Create new secret key
OPENAI_API_KEY="sk-..."
OPENAI_MODEL="gpt-4"

# Edamam APIs (server-only)
EDAMAM_FOOD_APP_ID=""
EDAMAM_FOOD_APP_KEY=""
EDAMAM_MEAL_APP_ID=""
EDAMAM_MEAL_APP_KEY=""

# API Ninjas (server-only)
APININJAS_API_KEY=""

# ==============================================
# üì± HEALTH APP INTEGRATIONS - Optional
# ==============================================
# Integration Token Encryption Key (REQUIRED if using health integrations)
# Generate with: openssl rand -hex 32
INTEGRATION_TOKEN_ENCRYPTION_KEY="your-64-character-hex-encryption-key-for-secure-token-storage"

# Apple Health Integration
# Note: Limited web integration - mainly for Apple Health Records API
# Requires iOS app with HealthKit for full device integration
# APPLE_HEALTH_CLIENT_ID="your-apple-health-client-id"
# APPLE_HEALTH_CLIENT_SECRET="your-apple-health-client-secret"

# Google Fit Integration  
# Setup: https://console.cloud.google.com/apis/credentials
# 1. Enable Google Fitness API
# 2. Create OAuth 2.0 Web Application credentials
# 3. Add your domain to authorized origins
# GOOGLE_FIT_CLIENT_ID="your-google-client-id.googleusercontent.com"
# GOOGLE_FIT_CLIENT_SECRET="GOCSPX-your-client-secret"

# Fitbit Integration
# Setup: https://dev.fitbit.com/apps/new
# 1. Create new app with "Server" application type
# 2. OAuth 2.0 Flow: "Authorization Code Flow"
# 3. Add callback URL: https://your-domain.com/api/integrations/fitbit/callback
# FITBIT_CLIENT_ID="23ABCD"
# FITBIT_CLIENT_SECRET="your-fitbit-client-secret"

# Samsung Health Integration
# Setup: https://developer.samsung.com/health
# 1. Register Samsung Developer account
# 2. Create health application
# 3. Request health data access permissions
# SAMSUNG_HEALTH_CLIENT_ID="your-samsung-health-client-id"
# SAMSUNG_HEALTH_CLIENT_SECRET="your-samsung-health-client-secret"

# Garmin Connect Integration
# Setup: https://developer.garmin.com/
# 1. Apply for developer access
# 2. Create Connect IQ application
# 3. Note: Requires separate mobile app for device sync
# GARMIN_CONSUMER_KEY="your-garmin-consumer-key"
# GARMIN_CONSUMER_SECRET="your-garmin-consumer-secret"

# ==============================================
# üìà MONITORING - Optional but Recommended
# ==============================================
# Error tracking with Sentry (free tier available)
# Sign up at: https://sentry.io/
# SENTRY_DSN="https://your-dsn@sentry.io/project"

# Analytics (Vercel provides built-in analytics)
# NEXT_PUBLIC_POSTHOG_KEY="phc_..." # Alternative analytics

# ==============================================
# ‚öôÔ∏è OPTIONAL PERFORMANCE & FEATURES
# ==============================================
# Redis for production caching and rate limiting
# REDIS_URL="redis://localhost:6379"
# UPSTASH_REDIS_REST_URL="https://..." # Serverless Redis alternative

# Feature toggles (development)
# NEXT_PUBLIC_ENABLE_AI_COACH="true"
# NEXT_PUBLIC_ENABLE_INTEGRATIONS="true"

# Environment
NODE_ENV="development"

# ==============================================
# üë®‚Äçüíº ADMIN PANEL CONFIGURATION
# ==============================================
# Admin user IDs (comma-separated Supabase user UUIDs)
# Add your admin user IDs here after creating accounts
ADMIN_USER_IDS="uuid1,uuid2,uuid3"

# Super admin user IDs (subset of admin users with full system access)
SUPER_ADMIN_USER_IDS="uuid1"

# ==============================================
# üîí SECURITY & TESTING NOTES
# ==============================================
# 
# IMPORTANT SECURITY REMINDERS:
# ‚Ä¢ NEVER commit .env.local to version control
# ‚Ä¢ Use test keys in development, live keys in production
# ‚Ä¢ Rotate API keys regularly
# ‚Ä¢ Verify webhook signatures in production
#
# STRIPE TEST CARDS (development only):
# ‚Ä¢ Success: 4242424242424242 (Visa)
# ‚Ä¢ Decline: 4000000000000002 (Generic decline)
# ‚Ä¢ More cards: https://stripe.com/docs/testing
#
# SETUP CHECKLIST:
# ‚ñ° 1. Create all required accounts (Neon, Supabase, Stripe, Resend, OpenAI)
# ‚ñ° 2. Set up Stripe products and prices
# ‚ñ° 3. Configure webhooks and verify domain
# ‚ñ° 4. Test payment flow with test cards
# ‚ñ° 5. Test email sending
# ‚ñ° 6. Run: npm run validate-env
#
# Need help? Check the README.md or visit:
# https://github.com/yourusername/tranquilae
# ==============================================
